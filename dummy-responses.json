[ {
  "priority" : 5,
  "name" : "GET /pet/findByTags",
  "description" : "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
  "request" : {
    "method" : "GET",
    "path" : "/pet/findByTags",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "POST /user/createWithArray",
  "request" : {
    "method" : "POST",
    "path" : "/user/createWithArray",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 404,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "request" : {
    "method" : "GET",
    "path" : "/api/user",
    "queries" : {
      "id" : "3000"
    },
    "headers" : {
      "User-Id" : "3"
    }
  },
  "response" : {
    "status" : 200,
    "headers" : {
      "Content-Type" : "application/json"
    },
    "body" : [ {
      "request.path.segments" : "{{request.path.segments[2]}}",
      "request.path" : "{{request.path --with-query-params}}",
      "request.url" : "{{request.url --with-query-params}}",
      "request.query" : "{{request.query.id2[1]}}",
      "request.header" : "{{request.header.Accept-Encoding}}",
      "request.body" : "{{request.body --xml-path='/Tutorials/Tutorial[@tutId=01]/title'}}",
      "now" : "{{now}}",
      "randomValue" : "{{randomValue}}",
      "oneOf" : "{{oneOf 12 22 --remove-quotes}}",
      "hostname" : "{{hostname}}"
    } ],
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "request" : {
    "method" : "GET",
    "path" : "/api/user",
    "queries" : { },
    "headers" : {
      "User-Id" : "2"
    }
  },
  "response" : {
    "status" : 200,
    "headers" : {
      "Content-Type" : "application/json"
    },
    "body" : [ {
      "name" : "Bob"
    } ],
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "request" : {
    "method" : "GET",
    "path" : "/api/user",
    "queries" : { },
    "headers" : {
      "User-Id" : "3"
    }
  },
  "response" : {
    "status" : 200,
    "headers" : {
      "Content-Type" : "application/json"
    },
    "body" : [ {
      "request.url" : "{{request.url}}",
      "now" : "{{now}}",
      "randomValue" : "{{randomValue}}",
      "oneOf" : "{{oneOf 12 22}}",
      "hostname" : "{{hostname}}"
    } ],
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "POST /user/createWithList",
  "request" : {
    "method" : "POST",
    "path" : "/user/createWithList",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 404,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "DELETE /user/{username}",
  "description" : "This can only be done by the logged in user.",
  "request" : {
    "method" : "DELETE",
    "path" : "/user/(.+?)",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 400,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "description" : "GET Bob user",
  "request" : {
    "method" : "GET",
    "path" : "/user",
    "queries" : { },
    "headers" : {
      "User-Id" : {
        "equalsTo" : "2"
      },
      "User-Id2" : "2"
    }
  },
  "response" : {
    "status" : 200,
    "headers" : {
      "Content-Type" : "application/json"
    },
    "body" : [ {
      "name" : "Bob"
    } ],
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "DELETE /store/order/{orderId}",
  "description" : "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
  "request" : {
    "method" : "DELETE",
    "path" : "/store/order/(.+?)",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 400,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "DELETE /pet/{petId}",
  "request" : {
    "method" : "DELETE",
    "path" : "/pet/(.+?)",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 400,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "POST /user",
  "description" : "This can only be done by the logged in user.",
  "request" : {
    "method" : "POST",
    "path" : "/user",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 404,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "GET /user/login",
  "request" : {
    "method" : "GET",
    "path" : "/user/login",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "GET /store/inventory",
  "description" : "Returns a map of status codes to quantities",
  "request" : {
    "method" : "GET",
    "path" : "/store/inventory",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "GET /user/logout",
  "request" : {
    "method" : "GET",
    "path" : "/user/logout",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 404,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "PUT /user/{username}",
  "description" : "This can only be done by the logged in user.",
  "request" : {
    "method" : "PUT",
    "path" : "/user/(.+?)",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 400,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "GET /user/{username}",
  "request" : {
    "method" : "GET",
    "path" : "/user/(.+?)",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "POST /pet/{petId}",
  "request" : {
    "method" : "POST",
    "path" : "/pet/(.+?)",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 405,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "POST /pet/{petId}/uploadImage",
  "request" : {
    "method" : "POST",
    "path" : "/pet/(.+?)/uploadImage",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "description" : "GET Alex user",
  "request" : {
    "method" : "GET",
    "path" : "/user",
    "queries" : { },
    "headers" : {
      "User-Id" : {
        "equalsTo" : "1"
      }
    }
  },
  "response" : {
    "status" : 200,
    "headers" : {
      "Content-Type" : "application/json"
    },
    "body" : [ {
      "name" : "Alex"
    } ],
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "GET /store/order/{orderId}",
  "description" : "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
  "request" : {
    "method" : "GET",
    "path" : "/store/order/(.+?)",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "request" : {
    "method" : "GET",
    "path" : "/api/user",
    "queries" : {
      "id" : "3"
    },
    "headers" : {
      "User-Id" : "3"
    }
  },
  "response" : {
    "status" : 200,
    "headers" : {
      "Content-Type" : "application/json"
    },
    "body" : [ {
      "request.path" : "{{request.path --with-query-params}}",
      "request.url" : "{{request.url --with-query-params}}",
      "request.query" : "{{request.query.id --remove-quotes}}",
      "request.header" : "{{request.header.Accept-Encoding}}",
      "request.body" : "{{request.body --xml-path='/Tutorials/Tutorial[@tutId=01]/title'}}",
      "now" : "{{now}}",
      "randomValue" : "{{randomValue}}",
      "oneOf" : "{{oneOf 12 22 --remove-quotes}}",
      "hostname" : "{{hostname}}"
    } ],
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "POST /pet",
  "request" : {
    "method" : "POST",
    "path" : "/pet",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 405,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "GET /pet/{petId}",
  "description" : "Returns a single pet",
  "request" : {
    "method" : "GET",
    "path" : "/pet/(.+?)",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "POST /store/order",
  "request" : {
    "method" : "POST",
    "path" : "/store/order",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "request" : {
    "method" : "GET",
    "path" : "/api/user",
    "queries" : { },
    "headers" : {
      "User-Id" : {
        "equalsTo" : "1"
      }
    }
  },
  "response" : {
    "status" : 200,
    "headers" : {
      "Content-Type" : "application/json"
    },
    "body" : [ {
      "name" : "Alex"
    } ],
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "PUT /pet",
  "request" : {
    "method" : "PUT",
    "path" : "/pet",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 400,
    "headers" : { },
    "delayInMillis" : 0
  }
}, {
  "priority" : 5,
  "name" : "GET /pet/findByStatus",
  "description" : "Multiple status values can be provided with comma separated strings",
  "request" : {
    "method" : "GET",
    "path" : "/pet/findByStatus",
    "queries" : { },
    "headers" : { }
  },
  "response" : {
    "status" : 200,
    "headers" : { },
    "delayInMillis" : 0
  }
} ]